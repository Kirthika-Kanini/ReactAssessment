// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelAgent.Data;

#nullable disable

namespace TravelAgent.Migrations
{
    [DbContext(typeof(AgentContext))]
    partial class AgentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Agent", b =>
                {
                    b.Property<int>("TravelAgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TravelAgentId"));

                    b.Property<string>("TravelAgentCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelAgentCompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelAgentContact")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TravelAgentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelAgentName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TravelAgentPassword")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TravelAgentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TravelAgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("TravelAgent.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("TravelAgent.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"));

                    b.Property<string>("HotelContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelPincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelSubLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaceId")
                        .HasColumnType("int");

                    b.HasKey("HotelId");

                    b.HasIndex("PlaceId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("TravelAgent.Models.Place", b =>
                {
                    b.Property<int>("PlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaceId"));

                    b.Property<int?>("AgentTravelAgentId")
                        .HasColumnType("int");

                    b.Property<int?>("DayCost")
                        .HasColumnType("int");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxDistance")
                        .HasColumnType("int");

                    b.Property<string>("PlaceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Route")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpotsImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int?>("TourCost")
                        .HasColumnType("int");

                    b.HasKey("PlaceId");

                    b.HasIndex("AgentTravelAgentId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("TravelAgent.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"));

                    b.Property<int?>("PlaceId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantPincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantSubLocation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantId");

                    b.HasIndex("PlaceId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("TravelAgent.Models.Hotel", b =>
                {
                    b.HasOne("TravelAgent.Models.Place", "Place")
                        .WithMany("Hotels")
                        .HasForeignKey("PlaceId");

                    b.Navigation("Place");
                });

            modelBuilder.Entity("TravelAgent.Models.Place", b =>
                {
                    b.HasOne("Agent", "Agent")
                        .WithMany("Place")
                        .HasForeignKey("AgentTravelAgentId");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("TravelAgent.Models.Restaurant", b =>
                {
                    b.HasOne("TravelAgent.Models.Place", "Place")
                        .WithMany("Restaurants")
                        .HasForeignKey("PlaceId");

                    b.Navigation("Place");
                });

            modelBuilder.Entity("Agent", b =>
                {
                    b.Navigation("Place");
                });

            modelBuilder.Entity("TravelAgent.Models.Place", b =>
                {
                    b.Navigation("Hotels");

                    b.Navigation("Restaurants");
                });
#pragma warning restore 612, 618
        }
    }
}
